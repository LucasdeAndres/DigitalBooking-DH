{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/Desktop/Coding/Digital_House/Bimestre_4/clonado_2/grupo-04/src/components/CalendarHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './styles/calendarStyle.css';\nimport es from 'date-fns/locale/es';\nimport useWindowSize from '../hooks';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarHome = _ref => {\n  _s();\n  let {\n    inline,\n    dateInfo\n  } = _ref;\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [startDate, endDate] = dateRange;\n  // setDefaultLocale('es');\n  registerLocale('es', es);\n  // Hook - windowSize\n  const {\n    width\n  } = useWindowSize();\n  const CustomDatePickerInput = _ref2 => {\n    let {\n      value,\n      onClick\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-picker-input\",\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCalendarAlt,\n        className: \"calendar-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this);\n  };\n\n  // console.log(dateBooking);\n\n  return /*#__PURE__*/_jsxDEV(DatePicker, {\n    customInput: /*#__PURE__*/_jsxDEV(CustomDatePickerInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }, this),\n    selectsRange: true,\n    startDate: startDate,\n    endDate: endDate,\n    minDate: new Date(),\n    monthsShown: width > 560 ? 2 : 1,\n    dateFormat: \"dd/MM/yyyy\",\n    placeholderText: \"Check in - Check out\",\n    onChange: update => {\n      setDateRange(update);\n      dateInfo(update);\n    },\n    locale: \"es\",\n    inline: inline || false\n    //   isClearable={true}\n    // fixedHeight\n    // excludeDates={dateBooking}\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarHome, \"0g5Dq53Y0gkygfT5TmoPdqJSYsg=\", false, function () {\n  return [useWindowSize];\n});\n_c = CalendarHome;\nexport { CalendarHome };\nvar _c;\n$RefreshReg$(_c, \"CalendarHome\");","map":{"version":3,"names":["React","useState","DatePicker","registerLocale","es","useWindowSize","FontAwesomeIcon","faCalendarAlt","CalendarHome","inline","dateInfo","dateRange","setDateRange","startDate","endDate","width","CustomDatePickerInput","value","onClick","Date","update"],"sources":["/Users/lucas/Desktop/Coding/Digital_House/Bimestre_4/clonado_2/grupo-04/src/components/CalendarHome.js"],"sourcesContent":["import React, { useState } from 'react';\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './styles/calendarStyle.css';\nimport es from 'date-fns/locale/es';\nimport useWindowSize from '../hooks';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst CalendarHome = ({inline, dateInfo}) => {\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [startDate, endDate] = dateRange;\n  // setDefaultLocale('es');\n  registerLocale('es', es);\n  // Hook - windowSize\n  const {width} = useWindowSize();\n\n  const CustomDatePickerInput = ({ value, onClick }) => (\n    <div className=\"date-picker-input\" onClick={onClick}>\n      <FontAwesomeIcon icon={faCalendarAlt} className=\"calendar-icon\" />\n      <span>{value}</span>\n    </div>\n  );\n  \n\n  // console.log(dateBooking);\n\n  return (\n    <DatePicker\n    customInput={<CustomDatePickerInput />}\n      selectsRange={true}\n      startDate={startDate}\n      endDate={endDate}\n      minDate={new Date()}\n      monthsShown={width > 560 ? 2 : 1}\n      dateFormat=\"dd/MM/yyyy\"\n      placeholderText=\"Check in - Check out\"\n      onChange={(update) => {\n        setDateRange(update);\n        dateInfo(update)\n      }}\n      locale=\"es\"\n      inline={inline || false}\n      //   isClearable={true}\n      // fixedHeight\n      // excludeDates={dateBooking}\n    />\n  );\n};\n\nexport {CalendarHome};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,IAAIC,cAAc,QAAQ,kBAAkB;AAC7D,OAAO,4CAA4C;AACnD,OAAO,4BAA4B;AACnC,OAAOC,EAAE,MAAM,oBAAoB;AACnC,OAAOC,aAAa,MAAM,UAAU;AACpC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,aAAa,QAAQ,mCAAmC;AAAA;AAEjE,MAAMC,YAAY,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAACC,MAAM;IAAEC;EAAQ,CAAC;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EACxD,MAAM,CAACY,SAAS,EAAEC,OAAO,CAAC,GAAGH,SAAS;EACtC;EACAR,cAAc,CAAC,IAAI,EAAEC,EAAE,CAAC;EACxB;EACA,MAAM;IAACW;EAAK,CAAC,GAAGV,aAAa,EAAE;EAE/B,MAAMW,qBAAqB,GAAG;IAAA,IAAC;MAAEC,KAAK;MAAEC;IAAQ,CAAC;IAAA,oBAC/C;MAAK,SAAS,EAAC,mBAAmB;MAAC,OAAO,EAAEA,OAAQ;MAAA,wBAClD,QAAC,eAAe;QAAC,IAAI,EAAEX,aAAc;QAAC,SAAS,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG,eAClE;QAAA,UAAOU;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAChB;EAAA,CACP;;EAGD;;EAEA,oBACE,QAAC,UAAU;IACX,WAAW,eAAE,QAAC,qBAAqB;MAAA;MAAA;MAAA;IAAA,QAAI;IACrC,YAAY,EAAE,IAAK;IACnB,SAAS,EAAEJ,SAAU;IACrB,OAAO,EAAEC,OAAQ;IACjB,OAAO,EAAE,IAAIK,IAAI,EAAG;IACpB,WAAW,EAAEJ,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,CAAE;IACjC,UAAU,EAAC,YAAY;IACvB,eAAe,EAAC,sBAAsB;IACtC,QAAQ,EAAGK,MAAM,IAAK;MACpBR,YAAY,CAACQ,MAAM,CAAC;MACpBV,QAAQ,CAACU,MAAM,CAAC;IAClB,CAAE;IACF,MAAM,EAAC,IAAI;IACX,MAAM,EAAEX,MAAM,IAAI;IAClB;IACA;IACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEN,CAAC;AAAC,GAvCID,YAAY;EAAA,QAMAH,aAAa;AAAA;AAAA,KANzBG,YAAY;AAyClB,SAAQA,YAAY;AAAE;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}