{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/Desktop/Coding/Digital_House/Bimestre_4/clonado_2/grupo-04/src/components/Input.js\",\n  _s = $RefreshSig$();\n// Imports\n// Librarys\nimport React, { useState } from \"react\";\n// Styles\nimport './styles/inputStyle.css';\n\n// Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = _ref => {\n  _s();\n  let {\n    diff,\n    nameInput,\n    stateInput,\n    setStateInput,\n    expressionsInput\n  } = _ref;\n  // States\n  const [state, setState] = useState(\"\");\n\n  // Events \n  const handleChange = e => {\n    setState(e.target.value);\n    setStateInput({\n      ...stateInput,\n      area: e.target.value\n    });\n  };\n\n  // Input types\n  function inputType(text) {\n    let type = \"\";\n    if (text === \"Contraseña\" || text === \"Confirmar contraseña\") {\n      type = \"password\";\n    } else if (text === \"Correo electrónico\") {\n      type = \"email\";\n    } else {\n      type = \"text\";\n    }\n    return type;\n  }\n\n  // Validations \n  const validation = () => {\n    if (expressionsInput || null) {\n      if (expressionsInput.test(stateInput.area)) {\n        setStateInput({\n          ...stateInput,\n          valido: 'true'\n        });\n      } else {\n        setStateInput({\n          ...stateInput,\n          valido: 'false'\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Input__div-${diff} input__div ${nameInput === \"Correo electrónico\" || nameInput === \"Contraseña\" ? 'loginInputs' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange,\n      onKeyUp: validation,\n      onBlur: validation,\n      className: `div__input-${diff} ${state ? `has__value-${stateInput.valido}` : \"\"}`,\n      type: inputType(nameInput),\n      id: nameInput,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: nameInput,\n      children: nameInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n// Exports\n_s(Input, \"ZG3gaz989oJoshq2aOGUAooQr9E=\");\n_c = Input;\nexport { Input };\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","Input","diff","nameInput","stateInput","setStateInput","expressionsInput","state","setState","handleChange","e","target","value","area","inputType","text","type","validation","test","valido"],"sources":["/Users/lucas/Desktop/Coding/Digital_House/Bimestre_4/clonado_2/grupo-04/src/components/Input.js"],"sourcesContent":["// Imports\n // Librarys\nimport React, {useState} from \"react\";\n// Styles\nimport './styles/inputStyle.css'\n\n// Component\nconst Input = ({diff, nameInput, stateInput, setStateInput, expressionsInput}) => {\n\n    // States\n    const [state, setState] = useState(\"\");\n\n    // Events \n    const handleChange = (e) => {\n        setState(e.target.value);\n        setStateInput({...stateInput, area: e.target.value})\n    }\n\n    // Input types\n    function inputType (text) {\n        let type = \"\";\n        if(text === \"Contraseña\" || text === \"Confirmar contraseña\"){\n            type = \"password\";\n        }else if(text === \"Correo electrónico\"){\n            type = \"email\";\n        }else{\n            type = \"text\";\n        }\n        return type;\n    }\n\n    // Validations \n    const validation = () => {\n        if(expressionsInput || null){\n            if(expressionsInput.test(stateInput.area)){\n                setStateInput({...stateInput, valido: 'true'});\n            }else{\n                setStateInput({...stateInput, valido: 'false'});\n            }\n        }\n    }\n\n    return(\n        <div className = {`Input__div-${diff} input__div ${nameInput === \"Correo electrónico\" || nameInput === \"Contraseña\" ? 'loginInputs' : ''}`}>\n            <input onChange = {handleChange} onKeyUp = {validation} onBlur = {validation} className = {`div__input-${diff} ${state ? `has__value-${stateInput.valido}` : \"\"}`} type = {inputType(nameInput)} id = {nameInput} required/>\n            <label htmlFor = {nameInput}>{nameInput}</label>\n        </div>\n    )\n}\n\n// Exports\nexport {Input};"],"mappings":";;AAAA;AACC;AACD,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC;AACA,OAAO,yBAAyB;;AAEhC;AAAA;AACA,MAAMC,KAAK,GAAG,QAAoE;EAAA;EAAA,IAAnE;IAACC,IAAI;IAAEC,SAAS;IAAEC,UAAU;IAAEC,aAAa;IAAEC;EAAgB,CAAC;EAEzE;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMS,YAAY,GAAIC,CAAC,IAAK;IACxBF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACxBP,aAAa,CAAC;MAAC,GAAGD,UAAU;MAAES,IAAI,EAAEH,CAAC,CAACC,MAAM,CAACC;IAAK,CAAC,CAAC;EACxD,CAAC;;EAED;EACA,SAASE,SAAS,CAAEC,IAAI,EAAE;IACtB,IAAIC,IAAI,GAAG,EAAE;IACb,IAAGD,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,sBAAsB,EAAC;MACxDC,IAAI,GAAG,UAAU;IACrB,CAAC,MAAK,IAAGD,IAAI,KAAK,oBAAoB,EAAC;MACnCC,IAAI,GAAG,OAAO;IAClB,CAAC,MAAI;MACDA,IAAI,GAAG,MAAM;IACjB;IACA,OAAOA,IAAI;EACf;;EAEA;EACA,MAAMC,UAAU,GAAG,MAAM;IACrB,IAAGX,gBAAgB,IAAI,IAAI,EAAC;MACxB,IAAGA,gBAAgB,CAACY,IAAI,CAACd,UAAU,CAACS,IAAI,CAAC,EAAC;QACtCR,aAAa,CAAC;UAAC,GAAGD,UAAU;UAAEe,MAAM,EAAE;QAAM,CAAC,CAAC;MAClD,CAAC,MAAI;QACDd,aAAa,CAAC;UAAC,GAAGD,UAAU;UAAEe,MAAM,EAAE;QAAO,CAAC,CAAC;MACnD;IACJ;EACJ,CAAC;EAED,oBACI;IAAK,SAAS,EAAK,cAAajB,IAAK,eAAcC,SAAS,KAAK,oBAAoB,IAAIA,SAAS,KAAK,YAAY,GAAG,aAAa,GAAG,EAAG,EAAE;IAAA,wBACvI;MAAO,QAAQ,EAAIM,YAAa;MAAC,OAAO,EAAIQ,UAAW;MAAC,MAAM,EAAIA,UAAW;MAAC,SAAS,EAAK,cAAaf,IAAK,IAAGK,KAAK,GAAI,cAAaH,UAAU,CAACe,MAAO,EAAC,GAAG,EAAG,EAAE;MAAC,IAAI,EAAIL,SAAS,CAACX,SAAS,CAAE;MAAC,EAAE,EAAIA,SAAU;MAAC,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAE,eAC5N;MAAO,OAAO,EAAIA,SAAU;MAAA,UAAEA;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9C;AAEd,CAAC;;AAED;AAAA,GA3CMF,KAAK;AAAA,KAALA,KAAK;AA4CX,SAAQA,KAAK;AAAE;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}