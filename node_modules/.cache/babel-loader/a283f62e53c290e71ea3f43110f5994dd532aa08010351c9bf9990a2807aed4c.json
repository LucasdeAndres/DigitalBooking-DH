{"ast":null,"code":"/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function (define) {\n  'use strict';\n\n  define(function () {\n    return {\n      formatError: formatError,\n      formatObject: formatObject,\n      tryStringify: tryStringify\n    };\n\n    /**\n     * Format an error into a string.  If e is an Error and has a stack property,\n     * it's returned.  Otherwise, e is formatted using formatObject, with a\n     * warning added about e not being a proper Error.\n     * @param {*} e\n     * @returns {String} formatted string, suitable for output to developers\n     */\n    function formatError(e) {\n      var s = typeof e === 'object' && e !== null && (e.stack || e.message) ? e.stack || e.message : formatObject(e);\n      return e instanceof Error ? s : s + ' (WARNING: non-Error used)';\n    }\n\n    /**\n     * Format an object, detecting \"plain\" objects and running them through\n     * JSON.stringify if possible.\n     * @param {Object} o\n     * @returns {string}\n     */\n    function formatObject(o) {\n      var s = String(o);\n      if (s === '[object Object]' && typeof JSON !== 'undefined') {\n        s = tryStringify(o, s);\n      }\n      return s;\n    }\n\n    /**\n     * Try to return the result of JSON.stringify(x).  If that fails, return\n     * defaultValue\n     * @param {*} x\n     * @param {*} defaultValue\n     * @returns {String|*} JSON.stringify(x) or defaultValue\n     */\n    function tryStringify(x, defaultValue) {\n      try {\n        return JSON.stringify(x);\n      } catch (e) {\n        return defaultValue;\n      }\n    }\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory();\n});","map":{"version":3,"names":["define","formatError","formatObject","tryStringify","e","s","stack","message","Error","o","String","JSON","x","defaultValue","stringify","amd","factory","module","exports"],"sources":["/Users/lucas/Desktop/Coding/Digital_House/Bimestre_4/clonado_2/grupo-04/node_modules/when/lib/format.js"],"sourcesContent":["/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn {\n\t\tformatError: formatError,\n\t\tformatObject: formatObject,\n\t\ttryStringify: tryStringify\n\t};\n\n\t/**\n\t * Format an error into a string.  If e is an Error and has a stack property,\n\t * it's returned.  Otherwise, e is formatted using formatObject, with a\n\t * warning added about e not being a proper Error.\n\t * @param {*} e\n\t * @returns {String} formatted string, suitable for output to developers\n\t */\n\tfunction formatError(e) {\n\t\tvar s = typeof e === 'object' && e !== null && (e.stack || e.message) ? e.stack || e.message : formatObject(e);\n\t\treturn e instanceof Error ? s : s + ' (WARNING: non-Error used)';\n\t}\n\n\t/**\n\t * Format an object, detecting \"plain\" objects and running them through\n\t * JSON.stringify if possible.\n\t * @param {Object} o\n\t * @returns {string}\n\t */\n\tfunction formatObject(o) {\n\t\tvar s = String(o);\n\t\tif(s === '[object Object]' && typeof JSON !== 'undefined') {\n\t\t\ts = tryStringify(o, s);\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t * Try to return the result of JSON.stringify(x).  If that fails, return\n\t * defaultValue\n\t * @param {*} x\n\t * @param {*} defaultValue\n\t * @returns {String|*} JSON.stringify(x) or defaultValue\n\t */\n\tfunction tryStringify(x, defaultValue) {\n\t\ttry {\n\t\t\treturn JSON.stringify(x);\n\t\t} catch(e) {\n\t\t\treturn defaultValue;\n\t\t}\n\t}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n"],"mappings":"AAAA;AACA;AACA;;AAEC,WAASA,MAAM,EAAE;EAAE,YAAY;;EAChCA,MAAM,CAAC,YAAW;IAEjB,OAAO;MACNC,WAAW,EAAEA,WAAW;MACxBC,YAAY,EAAEA,YAAY;MAC1BC,YAAY,EAAEA;IACf,CAAC;;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACC,SAASF,WAAW,CAACG,CAAC,EAAE;MACvB,IAAIC,CAAC,GAAG,OAAOD,CAAC,KAAK,QAAQ,IAAIA,CAAC,KAAK,IAAI,KAAKA,CAAC,CAACE,KAAK,IAAIF,CAAC,CAACG,OAAO,CAAC,GAAGH,CAAC,CAACE,KAAK,IAAIF,CAAC,CAACG,OAAO,GAAGL,YAAY,CAACE,CAAC,CAAC;MAC9G,OAAOA,CAAC,YAAYI,KAAK,GAAGH,CAAC,GAAGA,CAAC,GAAG,4BAA4B;IACjE;;IAEA;AACD;AACA;AACA;AACA;AACA;IACC,SAASH,YAAY,CAACO,CAAC,EAAE;MACxB,IAAIJ,CAAC,GAAGK,MAAM,CAACD,CAAC,CAAC;MACjB,IAAGJ,CAAC,KAAK,iBAAiB,IAAI,OAAOM,IAAI,KAAK,WAAW,EAAE;QAC1DN,CAAC,GAAGF,YAAY,CAACM,CAAC,EAAEJ,CAAC,CAAC;MACvB;MACA,OAAOA,CAAC;IACT;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;IACC,SAASF,YAAY,CAACS,CAAC,EAAEC,YAAY,EAAE;MACtC,IAAI;QACH,OAAOF,IAAI,CAACG,SAAS,CAACF,CAAC,CAAC;MACzB,CAAC,CAAC,OAAMR,CAAC,EAAE;QACV,OAAOS,YAAY;MACpB;IACD;EAED,CAAC,CAAC;AACF,CAAC,EAAC,OAAOb,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACe,GAAG,GAAGf,MAAM,GAAG,UAASgB,OAAO,EAAE;EAAEC,MAAM,CAACC,OAAO,GAAGF,OAAO,EAAE;AAAE,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}